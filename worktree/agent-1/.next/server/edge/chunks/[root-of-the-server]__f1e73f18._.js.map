{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/alpha-02-Red Flag/nomad-korea/worktree/agent-1/utils/supabase/middleware.ts"],"sourcesContent":["import { createServerClient } from '@supabase/ssr'\nimport { NextResponse, type NextRequest } from 'next/server'\n\nexport async function updateSession(request: NextRequest) {\n  let supabaseResponse = NextResponse.next({\n    request\n  })\n\n  const supabase = createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        getAll() {\n          return request.cookies.getAll()\n        },\n        setAll(cookiesToSet) {\n          cookiesToSet.forEach(({ name, value, options }) => request.cookies.set(name, value))\n          supabaseResponse = NextResponse.next({\n            request\n          })\n          cookiesToSet.forEach(({ name, value, options }) =>\n            supabaseResponse.cookies.set(name, value, options)\n          )\n        }\n      }\n    }\n  )\n\n  // IMPORTANT: Avoid writing any logic between createServerClient and\n  // supabase.auth.getUser(). A simple mistake could make it very hard to debug\n  // issues with users being randomly logged out.\n\n  // Authentication disabled for UI-only demo\n  // const {\n  //   data: { user }\n  // } = await supabase.auth.getUser()\n\n  // if (\n  //   !user &&\n  //   !request.nextUrl.pathname.startsWith('/login') &&\n  //   !request.nextUrl.pathname.startsWith('/auth')\n  // ) {\n  //   // no user, potentially respond by redirecting the user to the login page\n  //   const url = request.nextUrl.clone()\n  //   url.pathname = '/login'\n  //   return NextResponse.redirect(url)\n  // }\n\n  // IMPORTANT: You *must* return the supabaseResponse object as it is.\n  // If you're creating a new response object with NextResponse.next() make sure to:\n  // 1. Pass the request in it, like so:\n  //    const myNewResponse = NextResponse.next({ request })\n  // 2. Copy over the cookies, like so:\n  //    myNewResponse.cookies.setAll(supabaseResponse.cookies.getAll())\n  // 3. Change the myNewResponse object to fit your needs, but avoid changing\n  //    the cookies!\n  // 4. Finally:\n  //    return myNewResponse\n  // If this is not done, you may be causing the browser and server to go out\n  // of sync and terminate the user's session prematurely!\n\n  return supabaseResponse\n}\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AAAA;;;AAEO,eAAe,cAAc,OAAoB;IACtD,IAAI,mBAAmB,uYAAY,CAAC,IAAI,CAAC;QACvC;IACF;IAEA,MAAM,WAAW,IAAA,kWAAkB,EACjC,QAAQ,GAAG,CAAC,wBAAwB,EACpC,QAAQ,GAAG,CAAC,6BAA6B,EACzC;QACE,SAAS;YACP;gBACE,OAAO,QAAQ,OAAO,CAAC,MAAM;YAC/B;YACA,QAAO,YAAY;gBACjB,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAAK,QAAQ,OAAO,CAAC,GAAG,CAAC,MAAM;gBAC7E,mBAAmB,uYAAY,CAAC,IAAI,CAAC;oBACnC;gBACF;gBACA,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAC5C,iBAAiB,OAAO,CAAC,GAAG,CAAC,MAAM,OAAO;YAE9C;QACF;IACF;IAGF,oEAAoE;IACpE,6EAA6E;IAC7E,+CAA+C;IAE/C,2CAA2C;IAC3C,UAAU;IACV,mBAAmB;IACnB,oCAAoC;IAEpC,OAAO;IACP,aAAa;IACb,sDAAsD;IACtD,kDAAkD;IAClD,MAAM;IACN,8EAA8E;IAC9E,wCAAwC;IACxC,4BAA4B;IAC5B,sCAAsC;IACtC,IAAI;IAEJ,qEAAqE;IACrE,kFAAkF;IAClF,sCAAsC;IACtC,0DAA0D;IAC1D,qCAAqC;IACrC,qEAAqE;IACrE,2EAA2E;IAC3E,kBAAkB;IAClB,cAAc;IACd,0BAA0B;IAC1B,2EAA2E;IAC3E,wDAAwD;IAExD,OAAO;AACT"}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/alpha-02-Red Flag/nomad-korea/middleware.ts"],"sourcesContent":["import { type NextRequest } from 'next/server'\r\nimport { updateSession } from '@/utils/supabase/middleware'\r\n\r\nexport async function middleware(request: NextRequest) {\r\n  return await updateSession(request)\r\n}\r\n\r\nexport const config = {\r\n  matcher: [\r\n    /*\r\n     * Match all request paths except for the ones starting with:\r\n     * - _next/static (static files)\r\n     * - _next/image (image optimization files)\r\n     * - favicon.ico (favicon file)\r\n     * Feel free to modify this pattern to include more paths.\r\n     */\r\n    '/((?!_next/static|_next/image|favicon.ico|.*\\\\.(?:svg|png|jpg|jpeg|gif|webp)$).*)'\r\n  ]\r\n}\r\n"],"names":[],"mappings":";;;;;;AACA;;AAEO,eAAe,WAAW,OAAoB;IACnD,OAAO,MAAM,IAAA,gOAAa,EAAC;AAC7B;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;;;;;;KAMC,GACD;KACD;AACH"}}]
}